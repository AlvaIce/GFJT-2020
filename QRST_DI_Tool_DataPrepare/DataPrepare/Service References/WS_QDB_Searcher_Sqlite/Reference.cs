//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataPrepare.WS_QDB_Searcher_Sqlite
{


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WS_QDB_Searcher_Sqlite.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDataSetFromSQLite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDataSetFromSQLite(string sql, string DataSourcePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDataDistinct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetDataDistinct(string distinctSql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTileSatellites", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] SearTileSatellites();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTileSensors", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] SearTileSensors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTileLevels", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] SearTileLevels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTileAllAttr", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearTileAllAttr();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ExecuteNonQuery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ExecuteNonQuery(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearProTileAllAttr", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearProTileAllAttr();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearProTileLevels", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] SearProTileLevels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTilePagedBaseColAndRowTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SearTilePagedBaseColAndRowTest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTilePagedBaseColAndRow", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearTilePagedBaseColAndRow(out int allRecordCount, string[] ColAndRow, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel, string OtherQuery, int startIndex, int offset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTilePaged", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearTilePaged(out int allRecordCount, string[] position, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel, int startIndex, int offset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTilePaged1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearTilePaged1(out int allRecordCount, string[] position, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel, string OtherQuery, int startIndex, int offset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TilePathsList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] TilePathsList(string[] tileNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTileYaan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearTileYaan(string row, string col, string tileLevel);
        
        // CODEGEN: 参数“tileInfos”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlArrayItemAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searTileByColAndRowBatch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DataPrepare.WS_QDB_Searcher_Sqlite.searTileByColAndRowBatchResponse searTileByColAndRowBatch(DataPrepare.WS_QDB_Searcher_Sqlite.searTileByColAndRowBatchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTileYaanBatch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearTileYaanBatch(string[] row, string[] col, string tileLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTileYaanBatchTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SearTileYaanBatchTest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTileGlobe", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] SearTileGlobe(string[] position, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTileForSimulation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SearTileForSimulation(string[] RowCols, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel);
        
        // CODEGEN: 参数“RowCol”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlArrayItemAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTileForSimulation1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        DataPrepare.WS_QDB_Searcher_Sqlite.SearTileForSimulation1Response SearTileForSimulation1(DataPrepare.WS_QDB_Searcher_Sqlite.SearTileForSimulation1Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTilePaged2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearTilePaged2(string[] position, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel, int startIndex, int offset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTilePaged3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SearTilePaged3(string[] position, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel, int startIndex, int offset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearPRODTileTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearPRODTileTest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearPRODTilePaged", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearPRODTilePaged(out int allRecordCount, string[] position, int[] datetime, string[] datatype, string[] tileLevel, int startIndex, int offset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearSpaceDistinctTiles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearSpaceDistinctTiles(string[] position, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTileForKSH", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SearTileForKSH(string satellite, string sensor, string datetime, string row, string col, string tileLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTileForKSHByRowAndCol", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearTileForKSHByRowAndCol(string tileLevel, string minRow, string maxRow, string minCol, string maxCol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchTileJPG", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SearchTileJPG(string dateTime, string tileLevel, string row, string col);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchTileJPGForGloble", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] SearchTileJPGForGloble(string dateTime, string tileLevel, string row, string col);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTileForJCGX", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearTileForJCGX(out int allRecordCount, string[] position, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel, int startIndex, int offset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearTileForJCGXtest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SearTileForJCGXtest();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="searTileByColAndRowBatch", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class searTileByColAndRowBatchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] tileInfos;
        
        public searTileByColAndRowBatchRequest() {
        }
        
        public searTileByColAndRowBatchRequest(string[][] tileInfos) {
            this.tileInfos = tileInfos;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="searTileByColAndRowBatchResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class searTileByColAndRowBatchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet searTileByColAndRowBatchResult;
        
        public searTileByColAndRowBatchResponse() {
        }
        
        public searTileByColAndRowBatchResponse(System.Data.DataSet searTileByColAndRowBatchResult) {
            this.searTileByColAndRowBatchResult = searTileByColAndRowBatchResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearTileForSimulation1", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearTileForSimulation1Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] RowCol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int[] datetime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] satellite;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string[] sensor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string[] datatype;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string[] tileLevel;
        
        public SearTileForSimulation1Request() {
        }
        
        public SearTileForSimulation1Request(string[][] RowCol, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel) {
            this.RowCol = RowCol;
            this.datetime = datetime;
            this.satellite = satellite;
            this.sensor = sensor;
            this.datatype = datatype;
            this.tileLevel = tileLevel;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearTileForSimulation1Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearTileForSimulation1Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SearTileForSimulation1Result;
        
        public SearTileForSimulation1Response() {
        }
        
        public SearTileForSimulation1Response(string SearTileForSimulation1Result) {
            this.SearTileForSimulation1Result = SearTileForSimulation1Result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : DataPrepare.WS_QDB_Searcher_Sqlite.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<DataPrepare.WS_QDB_Searcher_Sqlite.ServiceSoap>, DataPrepare.WS_QDB_Searcher_Sqlite.ServiceSoap {
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Data.DataSet GetDataSetFromSQLite(string sql, string DataSourcePath) {
            return base.Channel.GetDataSetFromSQLite(sql, DataSourcePath);
        }
        
        public string[] GetDataDistinct(string distinctSql) {
            return base.Channel.GetDataDistinct(distinctSql);
        }
        
        public string[] SearTileSatellites() {
            return base.Channel.SearTileSatellites();
        }
        
        public string[] SearTileSensors() {
            return base.Channel.SearTileSensors();
        }
        
        public string[] SearTileLevels() {
            return base.Channel.SearTileLevels();
        }
        
        public System.Data.DataSet SearTileAllAttr() {
            return base.Channel.SearTileAllAttr();
        }
        
        public void ExecuteNonQuery(string sql) {
            base.Channel.ExecuteNonQuery(sql);
        }
        
        public System.Data.DataSet SearProTileAllAttr() {
            return base.Channel.SearProTileAllAttr();
        }
        
        public string[] SearProTileLevels() {
            return base.Channel.SearProTileLevels();
        }
        
        public int SearTilePagedBaseColAndRowTest() {
            return base.Channel.SearTilePagedBaseColAndRowTest();
        }
        
        public System.Data.DataSet SearTilePagedBaseColAndRow(out int allRecordCount, string[] ColAndRow, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel, string OtherQuery, int startIndex, int offset) {
            return base.Channel.SearTilePagedBaseColAndRow(out allRecordCount, ColAndRow, datetime, satellite, sensor, datatype, tileLevel, OtherQuery, startIndex, offset);
        }
        
        public System.Data.DataSet SearTilePaged(out int allRecordCount, string[] position, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel, int startIndex, int offset) {
            return base.Channel.SearTilePaged(out allRecordCount, position, datetime, satellite, sensor, datatype, tileLevel, startIndex, offset);
        }
        
        public System.Data.DataSet SearTilePaged1(out int allRecordCount, string[] position, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel, string OtherQuery, int startIndex, int offset) {
            return base.Channel.SearTilePaged1(out allRecordCount, position, datetime, satellite, sensor, datatype, tileLevel, OtherQuery, startIndex, offset);
        }
        
        public string[] TilePathsList(string[] tileNames) {
            return base.Channel.TilePathsList(tileNames);
        }
        
        public System.Data.DataSet SearTileYaan(string row, string col, string tileLevel) {
            return base.Channel.SearTileYaan(row, col, tileLevel);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataPrepare.WS_QDB_Searcher_Sqlite.searTileByColAndRowBatchResponse DataPrepare.WS_QDB_Searcher_Sqlite.ServiceSoap.searTileByColAndRowBatch(DataPrepare.WS_QDB_Searcher_Sqlite.searTileByColAndRowBatchRequest request) {
            return base.Channel.searTileByColAndRowBatch(request);
        }
        
        public System.Data.DataSet searTileByColAndRowBatch(string[][] tileInfos) {
            DataPrepare.WS_QDB_Searcher_Sqlite.searTileByColAndRowBatchRequest inValue = new DataPrepare.WS_QDB_Searcher_Sqlite.searTileByColAndRowBatchRequest();
            inValue.tileInfos = tileInfos;
            DataPrepare.WS_QDB_Searcher_Sqlite.searTileByColAndRowBatchResponse retVal = ((DataPrepare.WS_QDB_Searcher_Sqlite.ServiceSoap)(this)).searTileByColAndRowBatch(inValue);
            return retVal.searTileByColAndRowBatchResult;
        }
        
        public System.Data.DataSet SearTileYaanBatch(string[] row, string[] col, string tileLevel) {
            return base.Channel.SearTileYaanBatch(row, col, tileLevel);
        }
        
        public string SearTileYaanBatchTest() {
            return base.Channel.SearTileYaanBatchTest();
        }
        
        public string[] SearTileGlobe(string[] position, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel) {
            return base.Channel.SearTileGlobe(position, satellite, sensor, datatype, tileLevel);
        }
        
        public string SearTileForSimulation(string[] RowCols, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel) {
            return base.Channel.SearTileForSimulation(RowCols, datetime, satellite, sensor, datatype, tileLevel);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataPrepare.WS_QDB_Searcher_Sqlite.SearTileForSimulation1Response DataPrepare.WS_QDB_Searcher_Sqlite.ServiceSoap.SearTileForSimulation1(DataPrepare.WS_QDB_Searcher_Sqlite.SearTileForSimulation1Request request) {
            return base.Channel.SearTileForSimulation1(request);
        }
        
        public string SearTileForSimulation1(string[][] RowCol, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel) {
            DataPrepare.WS_QDB_Searcher_Sqlite.SearTileForSimulation1Request inValue = new DataPrepare.WS_QDB_Searcher_Sqlite.SearTileForSimulation1Request();
            inValue.RowCol = RowCol;
            inValue.datetime = datetime;
            inValue.satellite = satellite;
            inValue.sensor = sensor;
            inValue.datatype = datatype;
            inValue.tileLevel = tileLevel;
            DataPrepare.WS_QDB_Searcher_Sqlite.SearTileForSimulation1Response retVal = ((DataPrepare.WS_QDB_Searcher_Sqlite.ServiceSoap)(this)).SearTileForSimulation1(inValue);
            return retVal.SearTileForSimulation1Result;
        }
        
        public System.Data.DataSet SearTilePaged2(string[] position, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel, int startIndex, int offset) {
            return base.Channel.SearTilePaged2(position, datetime, satellite, sensor, datatype, tileLevel, startIndex, offset);
        }
        
        public string SearTilePaged3(string[] position, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel, int startIndex, int offset) {
            return base.Channel.SearTilePaged3(position, datetime, satellite, sensor, datatype, tileLevel, startIndex, offset);
        }
        
        public System.Data.DataSet SearPRODTileTest() {
            return base.Channel.SearPRODTileTest();
        }
        
        public System.Data.DataSet SearPRODTilePaged(out int allRecordCount, string[] position, int[] datetime, string[] datatype, string[] tileLevel, int startIndex, int offset) {
            return base.Channel.SearPRODTilePaged(out allRecordCount, position, datetime, datatype, tileLevel, startIndex, offset);
        }
        
        public System.Data.DataSet SearSpaceDistinctTiles(string[] position, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel) {
            return base.Channel.SearSpaceDistinctTiles(position, datetime, satellite, sensor, datatype, tileLevel);
        }
        
        public string SearTileForKSH(string satellite, string sensor, string datetime, string row, string col, string tileLevel) {
            return base.Channel.SearTileForKSH(satellite, sensor, datetime, row, col, tileLevel);
        }
        
        public System.Data.DataSet SearTileForKSHByRowAndCol(string tileLevel, string minRow, string maxRow, string minCol, string maxCol) {
            return base.Channel.SearTileForKSHByRowAndCol(tileLevel, minRow, maxRow, minCol, maxCol);
        }
        
        public string SearchTileJPG(string dateTime, string tileLevel, string row, string col) {
            return base.Channel.SearchTileJPG(dateTime, tileLevel, row, col);
        }
        
        public string[] SearchTileJPGForGloble(string dateTime, string tileLevel, string row, string col) {
            return base.Channel.SearchTileJPGForGloble(dateTime, tileLevel, row, col);
        }
        
        public System.Data.DataSet SearTileForJCGX(out int allRecordCount, string[] position, int[] datetime, string[] satellite, string[] sensor, string[] datatype, string[] tileLevel, int startIndex, int offset) {
            return base.Channel.SearTileForJCGX(out allRecordCount, position, datetime, satellite, sensor, datatype, tileLevel, startIndex, offset);
        }
        
        public int SearTileForJCGXtest() {
            return base.Channel.SearTileForJCGXtest();
        }
    }
}
