//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataPrepare.WS_QDB_SubmitOrder {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WS_QDB_SubmitOrder.SubmitOrderSoap")]
    public interface SubmitOrderSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNewWorkSpace", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetNewWorkSpace(string dataType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SubmitHJDataImport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SubmitHJDataImport(string sharePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SubmitDataImport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SubmitDataImport(string datatype, string sharePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SubmitImportOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SubmitImportOrder(string dataType, string sharePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UploadData(string dataType, string pathID, string opID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DownLoad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DownLoad(string dataID, string pathID, string opID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SubmitInstalledOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SubmitInstalledOrder(string orderName, string[] orderParas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateWorkSpaceForPreProcess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateWorkSpaceForPreProcess();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApplyNewGF1DataImportOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ApplyNewGF1DataImportOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderWorkspace", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetOrderWorkspace(string ordercode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResumeGF1DataImportOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ResumeGF1DataImportOrder(string ordercode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetOrderStatus2Waiting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SetOrderStatus2Waiting(string orderCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetOrderStatus(string ordercode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SubmitOrderSoapChannel : DataPrepare.WS_QDB_SubmitOrder.SubmitOrderSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubmitOrderSoapClient : System.ServiceModel.ClientBase<DataPrepare.WS_QDB_SubmitOrder.SubmitOrderSoap>, DataPrepare.WS_QDB_SubmitOrder.SubmitOrderSoap {
        
        public SubmitOrderSoapClient() {
        }
        
        public SubmitOrderSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SubmitOrderSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubmitOrderSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubmitOrderSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetNewWorkSpace(string dataType) {
            return base.Channel.GetNewWorkSpace(dataType);
        }
        
        public int SubmitHJDataImport(string sharePath) {
            return base.Channel.SubmitHJDataImport(sharePath);
        }
        
        public int SubmitDataImport(string datatype, string sharePath) {
            return base.Channel.SubmitDataImport(datatype, sharePath);
        }
        
        public int SubmitImportOrder(string dataType, string sharePath) {
            return base.Channel.SubmitImportOrder(dataType, sharePath);
        }
        
        public int UploadData(string dataType, string pathID, string opID) {
            return base.Channel.UploadData(dataType, pathID, opID);
        }
        
        public int DownLoad(string dataID, string pathID, string opID) {
            return base.Channel.DownLoad(dataID, pathID, opID);
        }
        
        public string SubmitInstalledOrder(string orderName, string[] orderParas) {
            return base.Channel.SubmitInstalledOrder(orderName, orderParas);
        }
        
        public string CreateWorkSpaceForPreProcess() {
            return base.Channel.CreateWorkSpaceForPreProcess();
        }
        
        public string ApplyNewGF1DataImportOrder() {
            return base.Channel.ApplyNewGF1DataImportOrder();
        }
        
        public string GetOrderWorkspace(string ordercode) {
            return base.Channel.GetOrderWorkspace(ordercode);
        }
        
        public bool ResumeGF1DataImportOrder(string ordercode) {
            return base.Channel.ResumeGF1DataImportOrder(ordercode);
        }
        
        public void SetOrderStatus2Waiting(string orderCode) {
            base.Channel.SetOrderStatus2Waiting(orderCode);
        }
        
        public string GetOrderStatus(string ordercode) {
            return base.Channel.GetOrderStatus(ordercode);
        }
    }
}
